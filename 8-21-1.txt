/*
struct TreeNode {
    int val;
    struct TreeNode *left;
    struct TreeNode *right;
    TreeNode(int x) :
            val(x), left(NULL), right(NULL) {
    }
};
*/
class Solution {
public:
    vector<vector<int> > Print(TreeNode* pRoot) {
        vector<vector<int> > ret;
        if(pRoot == nullptr)
            return ret;
        stack<TreeNode*> s1;
        stack<TreeNode*> s2;
        TreeNode* cur = pRoot;
        s1.push(cur);
        while(!s1.empty() || !s2.empty())
        {
            vector<int> tmp;
            if(!s1.empty())
            {
                while(!s1.empty())
                {
                    cur = s1.top();
                    s1.pop();
                    tmp.push_back(cur->val);
                    if(cur->left)
                        s2.push(cur->left);
                    if(cur->right)
                        s2.push(cur->right);
                }
                ret.push_back(tmp);
            }
            else if(!s2.empty())
            {
                 while(!s2.empty())
                 {
                     cur = s2.top();
                     s2.pop();
                     tmp.push_back(cur->val);
                     if(cur->right)
                         s1.push(cur->right);
                     if(cur->left)
                         s1.push(cur->left);
                 }
                 ret.push_back(tmp);
            }
        }
        
        return ret;
    }
    
};