/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
typedef struct ListNode ListNode;
struct ListNode *getIntersectionNode(struct ListNode *headA, struct ListNode *headB) {
    if(NULL == headA || NULL == headB)
        return NULL;
    
    ListNode *pA = headA;
    ListNode *pB = headB;
    int sizeA = 1, sizeB = 1;
    while(pA->next)
    {
        sizeA++;
        pA = pA->next;
    }
    while(pB->next)
    {
        sizeB++;
        pB = pB->next;
    }
    
    if(pA != pB)
        return NULL;
    
    pA = headA;
    pB = headB;
    if(sizeA > sizeB)
    {
        for(int i = 0; i < (sizeA-sizeB); ++i)
            pA = pA->next;
        
    }
    else
    {
        for(int i = 0; i < (sizeB-sizeA); ++i)
            pB = pB->next;
    }
    while(pA != pB)
    {
        pA = pA->next;
        pB = pB->next;
    }
    return pA;
}